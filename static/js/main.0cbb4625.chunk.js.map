{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonTable/PersonTable.tsx","pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","App.tsx","index.tsx"],"names":["delay","getPeople","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","classNames","sex","to","slug","name","PersonTable","persons","selected","getPerson","finded","find","people","map","born","died","motherName","fatherName","PeoplePage","useState","setPersons","isLoading","setIsLoading","isError","setIsError","useParams","useEffect","catch","finally","length","PageNavLink","text","isActive","MainNav","role","HomePage","ErrorPage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.0cbb4625.chunk.js","sourcesContent":["import { Person } from './types';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst wait = (delay: number) => new Promise(\n  resolve => setTimeout(resolve, delay),\n);\n\nexport const getPeople: Promise<Person[]>\n  = wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n    to={`/people/${person.slug}`}\n  >\n    {person.name}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  persons: Person[],\n  selected: string,\n};\n\nexport const PersonTable: React.FC<Props> = ({ persons, selected }) => {\n  const getPerson = (name: string | null) => {\n    const finded = persons.find(people => people.name === name);\n\n    return finded\n      ? <PersonLink person={finded} />\n      : name;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {persons.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === selected,\n            })}\n          >\n            <td><PersonLink person={person} /></td>\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getPerson(person.motherName ?? '-') }</td>\n            <td>{getPerson(person.fatherName ?? '-') }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PersonTable } from '../components/PersonTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [persons, setPersons] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople\n      .then(people => setPersons(people))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {!isError && !isLoading && persons.length === 0\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {persons.length > 0\n          && (\n            <PersonTable\n              persons={persons}\n              selected={slug ?? '-'}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const MainNav: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n        <PageNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","export const HomePage :React.FC = () => <h1 className=\"title\">Home Page</h1>;\n","export const ErrorPage:React.FC = () => (\n  <h1 className=\"title\">\n    Page not found\n  </h1>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { MainNav } from './components/MainNav';\nimport { HomePage } from './pages/HomePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}